		<% wlroles_list_ids = WlProjectWindowLogic.retrieve_display_role_ids_list(@project) %> 
		<% wlroles_list = wlroles_list_ids.map{|role_id| [Role.find(role_id).name, role_id]} %> 
		<% wlusers_list = @project.wl_members.map{|member| [member.name, member.user.id]} %>
	
		<%= javascript_tag do %> 
		var wlroles_list_json = <%=raw wlroles_list.to_json %>;
		var wlusers_list_json = <%=raw wlusers_list.to_json %>;	
		<% end %>
	<%	entry_id_options = wlusers_list
		unless gr_series.new_record?
		gr_entry_type = gr_entries_list.first.entry_type 
			if gr_entry_type == "Role"
				entry_id_options = wlroles_list
			else
				entry_id_options = wlusers_list
			end 
		end
	%>

<!--Form -->
	<p>Series Type: 
		<% type_member_list = ['User', 'Role'] %>
		<%= select_tag("entry_type" , options_for_select(type_member_list, (gr_entry_type unless gr_series.new_record?)), {:multiple => false, :onchange => "entry_type_change(wlroles_list_json, wlusers_list_json);"}) %>
		</p>
	<p>Series Entries: 
		<%= select_tag( "entry_id", options_for_select(entry_id_options, (gr_entries_list.map{|entry| entry.entry_id} unless gr_series.new_record?) ), {:multiple => true, :required => true, :onchange => "entry_id_change();"} ) %>
	 	</p>

	<div id="operation_div" 
		<% if gr_series.new_record? || (!gr_series.new_record? && gr_series.properties[:operation].nil?) %>
	 	 style ="display: none;"
	 	<% end %>
	>
		<% groperation_list = WlSeries.operation_options.to_a.map{|a| [a[0].to_s, a[1]]} %>
		<% selected_operation = 0 %>
		<% if gr_series.new_record?  
			disabled =  true 		  
		else 
			if gr_series.properties[:operation].nil? 
				disabled = true
			else
				selected_operation = gr_series.properties[:operation]
				disabled = false
			end	
		end %>
	<p>Series Function (operation): 
		<%# series_operation_options: { sum: 0, average: 1, min: 2, max: 3}  %>
		<%= select_tag( "operation", options_for_select(groperation_list, selected_operation), { :multiple => false, :disabled => disabled		} ) %>
		</p>
	</div>

	<p>Series Name: <%= text_field_tag("name", (gr_series.name unless gr_series.new_record?), :required => true ) %></p>
	<p>Series Color: 
		<%= text_field_tag( "color_picker",  gr_series.new_record? ? "56aaff" : gr_series.properties[:color] ) %>
		</p>
	<p>Series Chart Type: 
		<%# chart_type: { pie: 0, column: 1, line: 2, spline: 3, area: 4, bar: 5 } and drop the first element [pie: 0]  %>
		<% chart_type_options = GrSeries.chart_types.to_a.map{|a| [a[0].humanize, a[1]]}.drop(1) %> 
		<%= select_tag( "chart_type", options_for_select(chart_type_options, (GrSeries.chart_types[gr_series.chart_type] unless gr_series.new_record?)), {:multiple => false} ) %>
		</p>

	<p>Series Attribut: 
		<%# series_attribut_options: { project_allocation: 0, total_allocation: 1, remaining_allocation: 2, logged_time: 3, check_ratio: 4}  %>
		<%= select_tag( "attribut", options_for_select(WlSeries.attribut_options.to_a.map{|a| [a[0].to_s, a[1]]}, (gr_series.properties[:attribut] unless gr_series.new_record?) ), { :multiple => false } ) %>
		</p> 



